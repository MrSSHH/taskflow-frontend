diff --git a/android/app/capacitor.build.gradle b/android/app/capacitor.build.gradle
index 1529945..f2ad3a0 100644
--- a/android/app/capacitor.build.gradle
+++ b/android/app/capacitor.build.gradle
@@ -10,10 +10,12 @@ android {
 apply from: "../capacitor-cordova-android-plugins/cordova.variables.gradle"
 dependencies {
     implementation project(':capacitor-app')
+    implementation project(':capacitor-browser')
     implementation project(':capacitor-haptics')
     implementation project(':capacitor-keyboard')
     implementation project(':capacitor-preferences')
     implementation project(':capacitor-status-bar')
+    implementation project(':capgo-capacitor-social-login')
 
 }
 
diff --git a/android/capacitor.settings.gradle b/android/capacitor.settings.gradle
index 0a43fea..7780d31 100644
--- a/android/capacitor.settings.gradle
+++ b/android/capacitor.settings.gradle
@@ -5,6 +5,9 @@ project(':capacitor-android').projectDir = new File('../node_modules/@capacitor/
 include ':capacitor-app'
 project(':capacitor-app').projectDir = new File('../node_modules/@capacitor/app/android')
 
+include ':capacitor-browser'
+project(':capacitor-browser').projectDir = new File('../node_modules/@capacitor/browser/android')
+
 include ':capacitor-haptics'
 project(':capacitor-haptics').projectDir = new File('../node_modules/@capacitor/haptics/android')
 
@@ -16,3 +19,6 @@ project(':capacitor-preferences').projectDir = new File('../node_modules/@capaci
 
 include ':capacitor-status-bar'
 project(':capacitor-status-bar').projectDir = new File('../node_modules/@capacitor/status-bar/android')
+
+include ':capgo-capacitor-social-login'
+project(':capgo-capacitor-social-login').projectDir = new File('../node_modules/@capgo/capacitor-social-login/android')
diff --git a/capacitor.config.ts b/capacitor.config.ts
index 33df933..fa6dd6f 100644
--- a/capacitor.config.ts
+++ b/capacitor.config.ts
@@ -1,9 +1,10 @@
-import type { CapacitorConfig } from '@capacitor/cli';
+import type { CapacitorConfig } from "@capacitor/cli";
 
 const config: CapacitorConfig = {
-  appId: 'io.ionic.starter',
-  appName: 'myApp',
-  webDir: 'dist'
+  appId: "com.benji.taskflow",
+  appName: "Taskflow",
+  webDir: "dist",
+  plugins: {},
 };
 
 export default config;
diff --git a/ios/App/App.xcodeproj/project.pbxproj b/ios/App/App.xcodeproj/project.pbxproj
index d6d8154..c85d4a8 100644
--- a/ios/App/App.xcodeproj/project.pbxproj
+++ b/ios/App/App.xcodeproj/project.pbxproj
@@ -354,7 +354,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				MARKETING_VERSION = 1.0;
 				OTHER_SWIFT_FLAGS = "$(inherited) \"-D\" \"COCOAPODS\" \"-DDEBUG\"";
-				PRODUCT_BUNDLE_IDENTIFIER = io.ionic.starter;
+				PRODUCT_BUNDLE_IDENTIFIER = com.benji.taskflow;
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
 				SWIFT_VERSION = 5.0;
@@ -373,7 +373,7 @@
 				IPHONEOS_DEPLOYMENT_TARGET = 14.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				MARKETING_VERSION = 1.0;
-				PRODUCT_BUNDLE_IDENTIFIER = io.ionic.starter;
+				PRODUCT_BUNDLE_IDENTIFIER = com.benji.taskflow;
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "";
 				SWIFT_VERSION = 5.0;
diff --git a/ios/App/App.xcodeproj/xcshareddata/xcschemes/App.xcscheme b/ios/App/App.xcodeproj/xcshareddata/xcschemes/App.xcscheme
new file mode 100644
index 0000000..50e4f82
--- /dev/null
+++ b/ios/App/App.xcodeproj/xcshareddata/xcschemes/App.xcscheme
@@ -0,0 +1,78 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Scheme
+   LastUpgradeVersion = "1640"
+   version = "1.7">
+   <BuildAction
+      parallelizeBuildables = "YES"
+      buildImplicitDependencies = "YES"
+      buildArchitectures = "Automatic">
+      <BuildActionEntries>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "YES"
+            buildForArchiving = "YES"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "504EC3031FED79650016851F"
+               BuildableName = "App.app"
+               BlueprintName = "App"
+               ReferencedContainer = "container:App.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+      </BuildActionEntries>
+   </BuildAction>
+   <TestAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      shouldUseLaunchSchemeArgsEnv = "YES"
+      shouldAutocreateTestPlan = "YES">
+   </TestAction>
+   <LaunchAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      launchStyle = "0"
+      useCustomWorkingDirectory = "NO"
+      ignoresPersistentStateOnLaunch = "NO"
+      debugDocumentVersioning = "YES"
+      debugServiceExtension = "internal"
+      allowLocationSimulation = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "504EC3031FED79650016851F"
+            BuildableName = "App.app"
+            BlueprintName = "App"
+            ReferencedContainer = "container:App.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </LaunchAction>
+   <ProfileAction
+      buildConfiguration = "Release"
+      shouldUseLaunchSchemeArgsEnv = "YES"
+      savedToolIdentifier = ""
+      useCustomWorkingDirectory = "NO"
+      debugDocumentVersioning = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "504EC3031FED79650016851F"
+            BuildableName = "App.app"
+            BlueprintName = "App"
+            ReferencedContainer = "container:App.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </ProfileAction>
+   <AnalyzeAction
+      buildConfiguration = "Debug">
+   </AnalyzeAction>
+   <ArchiveAction
+      buildConfiguration = "Release"
+      revealArchiveInOrganizer = "YES">
+   </ArchiveAction>
+</Scheme>
diff --git a/ios/App/App/AppDelegate.swift b/ios/App/App/AppDelegate.swift
index c3cd83b..d02b69b 100644
--- a/ios/App/App/AppDelegate.swift
+++ b/ios/App/App/AppDelegate.swift
@@ -1,3 +1,4 @@
+import GoogleSignIn
 import UIKit
 import Capacitor
 
@@ -36,6 +37,14 @@ class AppDelegate: UIResponder, UIApplicationDelegate {
     func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey: Any] = [:]) -> Bool {
         // Called when the app was launched with a url. Feel free to add additional processing here,
         // but if you want the App API to support tracking app url opens, make sure to keep this call
+
+        var handled: Bool
+
+        handled = GIDSignIn.sharedInstance.handle(url)
+        if handled {
+          return true
+        }
+
         return ApplicationDelegateProxy.shared.application(app, open: url, options: options)
     }
 
diff --git a/ios/App/App/Info.plist b/ios/App/App/Info.plist
index 0eccab9..6eb748a 100644
--- a/ios/App/App/Info.plist
+++ b/ios/App/App/Info.plist
@@ -5,7 +5,7 @@
 	<key>CFBundleDevelopmentRegion</key>
 	<string>en</string>
 	<key>CFBundleDisplayName</key>
-        <string>myApp</string>
+	<string>Taskflow</string>
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
@@ -18,6 +18,15 @@
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
 	<string>$(MARKETING_VERSION)</string>
+	<key>CFBundleURLTypes</key>
+	<array>
+		<dict>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>com.googleusercontent.apps.789609970397-gjhov389ke7vcnl1nqec28soeb5m7olk</string>
+			</array>
+		</dict>
+	</array>
 	<key>CFBundleVersion</key>
 	<string>$(CURRENT_PROJECT_VERSION)</string>
 	<key>LSRequiresIPhoneOS</key>
diff --git a/ios/App/Podfile b/ios/App/Podfile
index c6af975..dd88d58 100644
--- a/ios/App/Podfile
+++ b/ios/App/Podfile
@@ -12,10 +12,12 @@ def capacitor_pods
   pod 'Capacitor', :path => '../../node_modules/@capacitor/ios'
   pod 'CapacitorCordova', :path => '../../node_modules/@capacitor/ios'
   pod 'CapacitorApp', :path => '../../node_modules/@capacitor/app'
+  pod 'CapacitorBrowser', :path => '../../node_modules/@capacitor/browser'
   pod 'CapacitorHaptics', :path => '../../node_modules/@capacitor/haptics'
   pod 'CapacitorKeyboard', :path => '../../node_modules/@capacitor/keyboard'
   pod 'CapacitorPreferences', :path => '../../node_modules/@capacitor/preferences'
   pod 'CapacitorStatusBar', :path => '../../node_modules/@capacitor/status-bar'
+  pod 'CapgoCapacitorSocialLogin', :path => '../../node_modules/@capgo/capacitor-social-login'
 end
 
 target 'App' do
diff --git a/ios/App/Podfile.lock b/ios/App/Podfile.lock
index cc9bb29..e4e31a3 100644
--- a/ios/App/Podfile.lock
+++ b/ios/App/Podfile.lock
@@ -1,8 +1,21 @@
 PODS:
+  - Alamofire (5.10.2)
+  - AppAuth (2.0.0):
+    - AppAuth/Core (= 2.0.0)
+    - AppAuth/ExternalUserAgent (= 2.0.0)
+  - AppAuth/Core (2.0.0)
+  - AppAuth/ExternalUserAgent (2.0.0):
+    - AppAuth/Core
+  - AppCheckCore (11.2.0):
+    - GoogleUtilities/Environment (~> 8.0)
+    - GoogleUtilities/UserDefaults (~> 8.0)
+    - PromisesObjC (~> 2.4)
   - Capacitor (7.4.3):
     - CapacitorCordova
   - CapacitorApp (7.0.1):
     - Capacitor
+  - CapacitorBrowser (7.0.2):
+    - Capacitor
   - CapacitorCordova (7.4.3)
   - CapacitorHaptics (7.0.1):
     - Capacitor
@@ -12,21 +25,73 @@ PODS:
     - Capacitor
   - CapacitorStatusBar (7.0.1):
     - Capacitor
+  - CapgoCapacitorSocialLogin (7.11.10):
+    - Alamofire (~> 5.10.2)
+    - Capacitor
+    - FBSDKCoreKit (= 18.0.0)
+    - FBSDKLoginKit (= 18.0.0)
+    - GoogleSignIn (~> 9.0.0)
+  - FBAEMKit (18.0.0):
+    - FBSDKCoreKit_Basics (= 18.0.0)
+  - FBSDKCoreKit (18.0.0):
+    - FBAEMKit (= 18.0.0)
+    - FBSDKCoreKit_Basics (= 18.0.0)
+  - FBSDKCoreKit_Basics (18.0.0)
+  - FBSDKLoginKit (18.0.0):
+    - FBSDKCoreKit (= 18.0.0)
+  - GoogleSignIn (9.0.0):
+    - AppAuth (~> 2.0)
+    - AppCheckCore (~> 11.0)
+    - GTMAppAuth (~> 5.0)
+    - GTMSessionFetcher/Core (~> 3.3)
+  - GoogleUtilities/Environment (8.1.0):
+    - GoogleUtilities/Privacy
+  - GoogleUtilities/Logger (8.1.0):
+    - GoogleUtilities/Environment
+    - GoogleUtilities/Privacy
+  - GoogleUtilities/Privacy (8.1.0)
+  - GoogleUtilities/UserDefaults (8.1.0):
+    - GoogleUtilities/Logger
+    - GoogleUtilities/Privacy
+  - GTMAppAuth (5.0.0):
+    - AppAuth/Core (~> 2.0)
+    - GTMSessionFetcher/Core (< 4.0, >= 3.3)
+  - GTMSessionFetcher/Core (3.5.0)
+  - PromisesObjC (2.4.0)
 
 DEPENDENCIES:
   - "Capacitor (from `../../node_modules/@capacitor/ios`)"
   - "CapacitorApp (from `../../node_modules/@capacitor/app`)"
+  - "CapacitorBrowser (from `../../node_modules/@capacitor/browser`)"
   - "CapacitorCordova (from `../../node_modules/@capacitor/ios`)"
   - "CapacitorHaptics (from `../../node_modules/@capacitor/haptics`)"
   - "CapacitorKeyboard (from `../../node_modules/@capacitor/keyboard`)"
   - "CapacitorPreferences (from `../../node_modules/@capacitor/preferences`)"
   - "CapacitorStatusBar (from `../../node_modules/@capacitor/status-bar`)"
+  - "CapgoCapacitorSocialLogin (from `../../node_modules/@capgo/capacitor-social-login`)"
+
+SPEC REPOS:
+  trunk:
+    - Alamofire
+    - AppAuth
+    - AppCheckCore
+    - FBAEMKit
+    - FBSDKCoreKit
+    - FBSDKCoreKit_Basics
+    - FBSDKLoginKit
+    - GoogleSignIn
+    - GoogleUtilities
+    - GTMAppAuth
+    - GTMSessionFetcher
+    - PromisesObjC
 
 EXTERNAL SOURCES:
   Capacitor:
     :path: "../../node_modules/@capacitor/ios"
   CapacitorApp:
     :path: "../../node_modules/@capacitor/app"
+  CapacitorBrowser:
+    :path: "../../node_modules/@capacitor/browser"
   CapacitorCordova:
     :path: "../../node_modules/@capacitor/ios"
   CapacitorHaptics:
@@ -37,16 +102,32 @@ EXTERNAL SOURCES:
     :path: "../../node_modules/@capacitor/preferences"
   CapacitorStatusBar:
     :path: "../../node_modules/@capacitor/status-bar"
+  CapgoCapacitorSocialLogin:
+    :path: "../../node_modules/@capgo/capacitor-social-login"
 
 SPEC CHECKSUMS:
+  Alamofire: 7193b3b92c74a07f85569e1a6c4f4237291e7496
+  AppAuth: 1c1a8afa7e12f2ec3a294d9882dfa5ab7d3cb063
+  AppCheckCore: cc8fd0a3a230ddd401f326489c99990b013f0c4f
   Capacitor: 28d6c01026a9a3f7156529498ec1f389a2a28dbc
   CapacitorApp: febecbb9582cb353aed037e18ec765141f880fe9
+  CapacitorBrowser: 22541e48442de44dc629c214388290d6eecc6ae9
   CapacitorCordova: 435121e81a2df4d0034f0fb11fcefab5104cfdb5
   CapacitorHaptics: 1f1e17041f435d8ead9ff2a34edd592c6aa6a8d6
   CapacitorKeyboard: 09fd91dcde4f8a37313e7f11bde553ad1ed52036
   CapacitorPreferences: 65107ed7437d96ee72583df5763985e3c0ff2bc2
   CapacitorStatusBar: 6e7af040d8fc4dd655999819625cae9c2d74c36f
+  CapgoCapacitorSocialLogin: b158b57b36d0c807e4984383e3fd0648c5571d66
+  FBAEMKit: e34530df538b8eb8aeb53c35867715ba6c63ef0c
+  FBSDKCoreKit: d3f479a69127acebb1c6aad91c1a33907bcf6c2f
+  FBSDKCoreKit_Basics: 017b6dc2a1862024815a8229e75661e627ac1e29
+  FBSDKLoginKit: 5875762d1fe09ddcb05d03365d4f5dc34413843d
+  GoogleSignIn: c7f09cfbc85a1abf69187be091997c317cc33b77
+  GoogleUtilities: 00c88b9a86066ef77f0da2fab05f65d7768ed8e1
+  GTMAppAuth: 217a876b249c3c585a54fd6f73e6b58c4f5c4238
+  GTMSessionFetcher: 5aea5ba6bd522a239e236100971f10cb71b96ab6
+  PromisesObjC: f5707f49cb48b9636751c5b2e7d227e43fba9f47
 
-PODFILE CHECKSUM: 48faf9de1182c3c9c5c78044ebedc74862cff206
+PODFILE CHECKSUM: 4c7dc9801eb110d3f9511b2ee5f727fb75dc028d
 
 COCOAPODS: 1.16.2
diff --git a/package-lock.json b/package-lock.json
index 69c3411..46d8daa 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -10,12 +10,14 @@
       "dependencies": {
         "@capacitor/android": "7.4.2",
         "@capacitor/app": "7.0.1",
+        "@capacitor/browser": "^7.0.2",
         "@capacitor/core": "7.4.2",
         "@capacitor/haptics": "7.0.1",
         "@capacitor/ios": "^7.4.3",
         "@capacitor/keyboard": "7.0.1",
         "@capacitor/preferences": "^7.0.2",
         "@capacitor/status-bar": "7.0.1",
+        "@capgo/capacitor-social-login": "^7.11.10",
         "@ionic/react": "^8.5.0",
         "@ionic/react-router": "^8.5.0",
         "@types/react-router": "^5.1.20",
@@ -1699,6 +1701,15 @@
         "@capacitor/core": ">=7.0.0"
       }
     },
+    "node_modules/@capacitor/browser": {
+      "version": "7.0.2",
+      "resolved": "https://registry.npmjs.org/@capacitor/browser/-/browser-7.0.2.tgz",
+      "integrity": "sha512-5kySTunCtH+2sezmTjgDfwvspW7GW/hslQECZeLIRM2qefnxjGTc3fmCTeILYK5EuvcxMs+8sF5BhmzzKqOzuQ==",
+      "license": "MIT",
+      "peerDependencies": {
+        "@capacitor/core": ">=7.0.0"
+      }
+    },
     "node_modules/@capacitor/cli": {
       "version": "7.4.2",
       "resolved": "https://registry.npmjs.org/@capacitor/cli/-/cli-7.4.2.tgz",
@@ -1786,6 +1797,15 @@
         "@capacitor/core": ">=7.0.0"
       }
     },
+    "node_modules/@capgo/capacitor-social-login": {
+      "version": "7.11.10",
+      "resolved": "https://registry.npmjs.org/@capgo/capacitor-social-login/-/capacitor-social-login-7.11.10.tgz",
+      "integrity": "sha512-Ipxyx+xutdMM7ZXgBLFZW5dtsguh0SR1eipkq5H2gy1YZd7fjD5+ZbkYYa7ApZ3ukTd90ULoG2zyd/u+Py0Q+w==",
+      "license": "MIT",
+      "peerDependencies": {
+        "@capacitor/core": ">=7.0.0"
+      }
+    },
     "node_modules/@colors/colors": {
       "version": "1.5.0",
       "resolved": "https://registry.npmjs.org/@colors/colors/-/colors-1.5.0.tgz",
diff --git a/package.json b/package.json
index 2e00bf7..cd07689 100644
--- a/package.json
+++ b/package.json
@@ -14,12 +14,14 @@
   "dependencies": {
     "@capacitor/android": "7.4.2",
     "@capacitor/app": "7.0.1",
+    "@capacitor/browser": "^7.0.2",
     "@capacitor/core": "7.4.2",
     "@capacitor/haptics": "7.0.1",
     "@capacitor/ios": "^7.4.3",
     "@capacitor/keyboard": "7.0.1",
     "@capacitor/preferences": "^7.0.2",
     "@capacitor/status-bar": "7.0.1",
+    "@capgo/capacitor-social-login": "^7.11.10",
     "@ionic/react": "^8.5.0",
     "@ionic/react-router": "^8.5.0",
     "@types/react-router": "^5.1.20",
diff --git a/src/App.tsx b/src/App.tsx
index d0a05b8..2302061 100644
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -33,7 +33,6 @@ import "@ionic/react/css/palettes/dark.system.css";
 import "./theme/variables.css";
 import Login from "./pages/Login";
 import Register from "./pages/Register";
-import Menu from "./pages/AppShell";
 import AppShell from "./pages/AppShell";
 
 setupIonicReact();
diff --git a/src/components/buttons/GoogleAuthBtn.tsx b/src/components/buttons/GoogleAuthBtn.tsx
new file mode 100644
index 0000000..82f79ee
--- /dev/null
+++ b/src/components/buttons/GoogleAuthBtn.tsx
@@ -0,0 +1,74 @@
+import React, { useState } from "react";
+import { IonButton, IonIcon, IonSpinner } from "@ionic/react";
+import { logoGoogle } from "ionicons/icons";
+import { SocialLogin } from "@capgo/capacitor-social-login";
+import "../../theme/Login.css";
+interface GoogleLoginResponse {
+  provider: "google";
+  result: {
+    accessToken: {
+      token: string;
+      expires: string;
+      // ... other token fields
+    } | null;
+    idToken: string | null;
+    profile: {
+      email: string | null;
+      familyName: string | null;
+      givenName: string | null;
+      id: string | null;
+      name: string | null;
+      imageUrl: string | null;
+    };
+  };
+}
+const GoogleLoginBtn: React.FC = () => {
+  const [loading, setLoading] = useState(false);
+
+  const handleGoogleLogin = async () => {
+    setLoading(true);
+    try {
+      const googleResponse = await signIn();
+      console.log("User:", googleResponse.result.profile.name);
+      console.log("Email:", googleResponse.result.profile.email);
+      console.log("ID Token:", googleResponse.result.idToken);
+    } catch (err: any) {
+      if (err?.message?.includes("canceled")) {
+        console.log("User canceled login");
+      } else {
+        console.error("Login failed: ", err);
+      }
+    } finally {
+      setLoading(false);
+    }
+  };
+
+  const signIn = async (): Promise<GoogleLoginResponse> => {
+    const res = await SocialLogin.login({
+      provider: "google",
+      options: {
+        scopes: ["email", "profile"],
+      },
+    });
+
+    return res as GoogleLoginResponse;
+  };
+  return (
+    <IonButton
+      className={`google-signin-btn ${loading ? "loading" : ""}`}
+      expand="block"
+      fill="clear"
+      size="large"
+      onClick={handleGoogleLogin}
+    >
+      {!loading ? (
+        <IonIcon slot="start" icon={logoGoogle} />
+      ) : (
+        <IonSpinner name="crescent" slot="start" />
+      )}
+      {loading ? "Signing in..." : "Sign in with Google"}
+    </IonButton>
+  );
+};
+
+export default GoogleLoginBtn;
diff --git a/src/components/dashboard/TasksStatisticsCard.tsx b/src/components/dashboard/TasksStatisticsCard.tsx
index 7c602bf..c254652 100644
--- a/src/components/dashboard/TasksStatisticsCard.tsx
+++ b/src/components/dashboard/TasksStatisticsCard.tsx
@@ -6,7 +6,7 @@ import {
   IonCardTitle,
   useIonViewDidEnter,
 } from "@ionic/react";
-import React, { useEffect, useState } from "react";
+import React, { useState } from "react";
 import { ArcElement, Chart, Legend, Tooltip } from "chart.js";
 import { Doughnut } from "react-chartjs-2";
 import { getOverdueTasksAmt, getTasks } from "../../services/api";
@@ -79,9 +79,9 @@ const TasksStatisticsCard: React.FC = () => {
           <TasksStatisticsChart
             statsOfTasks={
               stats ?? {
-                Completed: 5,
-                Overdue: 2,
-                tasksLeft: 8,
+                Completed: 0,
+                Overdue: 0,
+                tasksLeft: 0,
               }
             }
           />
diff --git a/src/pages/Login.tsx b/src/pages/Login.tsx
index c3c1ce9..b88a6e3 100644
--- a/src/pages/Login.tsx
+++ b/src/pages/Login.tsx
@@ -25,6 +25,8 @@ import Intro from "../components/intro";
 import { Preferences } from "@capacitor/preferences";
 import LoginPageIcon from "../assets/icons/login-page-icon.png";
 import "../theme/Login.css"; // We'll add custom styles here
+import GoogleAuthBtn from "../components/buttons/GoogleAuthBtn";
+import { SocialLogin } from "@capgo/capacitor-social-login";
 
 const INTRO_KEY = "intro-seen";
 
@@ -32,7 +34,15 @@ const Login: React.FC = () => {
   const [introSeen, setIntroSeen] = useState(false);
   const router = useIonRouter();
   const [present, dismiss] = useIonLoading();
-
+  const init = async () => {
+    await SocialLogin.initialize({
+      google: {
+        iOSClientId:
+          "789609970397-gjhov389ke7vcnl1nqec28soeb5m7olk.apps.googleusercontent.com", // for iOS
+      },
+    });
+  };
+  init();
   useEffect(() => {
     const checkStorage = async () => {
       const seen = await Preferences.get({ key: INTRO_KEY });
@@ -137,6 +147,7 @@ const Login: React.FC = () => {
                           Create Account
                           <IonIcon icon={personCircleOutline} slot="end" />
                         </IonButton>
+                        <GoogleAuthBtn />
 
                         <IonButton
                           fill="clear"
diff --git a/src/pages/Tasks.tsx b/src/pages/Tasks.tsx
index 7a0ddff..3927b13 100644
--- a/src/pages/Tasks.tsx
+++ b/src/pages/Tasks.tsx
@@ -18,8 +18,8 @@ import {
   useIonViewWillEnter,
 } from "@ionic/react";
 import React, { useEffect, useRef, useState } from "react";
-import { getTasks, deleteTask, editTask } from "../services/api";
-import { addOutline, logInOutline, trashBinOutline } from "ionicons/icons";
+import { getTasks } from "../services/api";
+import { addOutline, trashBinOutline } from "ionicons/icons";
 
 import { Task } from "../types/task";
 import TaskCard from "../components/tasks/TaskCard";
diff --git a/src/services/api.ts b/src/services/api.ts
index 8d5ebef..e7bbd12 100644
--- a/src/services/api.ts
+++ b/src/services/api.ts
@@ -1,8 +1,9 @@
-import axios, { AxiosResponse } from "axios";
+import axios from "axios";
 import { Task } from "../types/task";
+import { GoogleLoginResponse } from "@capgo/capacitor-social-login";
 
 const api = axios.create({
-  baseURL: "http://localhost:3000/api",
+  baseURL: "http://192.168.50.52:3000/api",
   timeout: 10000,
   headers: {
     "Content-Type": "application/json",
@@ -43,3 +44,8 @@ export const addTask = async (task: Task) => {
   const taskJson = JSON.stringify(task, ["title", "body", "dueDate"], 2);
   return await api.post(`/tasks`, taskJson);
 };
+
+export const loginWithGoogle = async (result: GoogleLoginResponse) => {
+  console.log("Sending API the google token !");
+  return api.post("/auth/google/", result);
+};
diff --git a/src/theme/Login.css b/src/theme/Login.css
index 987b7eb..550573c 100644
--- a/src/theme/Login.css
+++ b/src/theme/Login.css
@@ -1,8 +1,11 @@
-/* Login.css */
+/* Login.css - Arctic Blue Theme */
 
 /* Background and overall layout */
 .login-content {
-  --background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
+  --background: linear-gradient(135deg, 
+#74b9ff 0%, 
+#0984e3 50%, 
+#6c5ce7 100%);
   position: relative;
 }
 
@@ -12,7 +15,7 @@
   left: 0;
   width: 100%;
   height: 100%;
-  background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
+  background: linear-gradient(135deg, rgba(116, 185, 255, 0.15) 0%, rgba(108, 92, 231, 0.15) 100%);
   backdrop-filter: blur(10px);
   z-index: 0;
 }
@@ -100,37 +103,47 @@
 
 .modern-input {
   --border-radius: 12px;
-  --border-color: #e1e5e9;
-  --border-color-focused: #667eea;
-  --highlight-color: #667eea;
+  --border-color: 
+#e1e5e9;
+  --border-color-focused: 
+#74b9ff;
+  --highlight-color: 
+#74b9ff;
   transition: all 0.3s ease;
 }
 
 .modern-input:hover {
-  --border-color: #667eea;
+  --border-color: 
+#74b9ff;
 }
 
 /* Button styling */
 .login-button {
-  --background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
-  --background-hover: linear-gradient(135deg, #5a67d8 0%, #6b46c1 100%);
+  --background: linear-gradient(135deg, 
+#74b9ff 0%, 
+#6c5ce7 100%);
+  --background-hover: linear-gradient(135deg, 
+#5faef7 0%, 
+#5f4bdb 100%);
   --border-radius: 12px;
-  --box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
+  --box-shadow: 0 4px 15px rgba(116, 185, 255, 0.4);
   font-weight: 600;
-  margin: 1rem 0;
+  margin: 0.5rem 0;
   transition: all 0.3s ease;
   text-transform: none;
 }
 
 .login-button:hover {
   transform: translateY(-2px);
-  --box-shadow: 0 6px 20px rgba(102, 126, 234, 0.5);
+  --box-shadow: 0 6px 20px rgba(116, 185, 255, 0.5);
 }
 
 .register-button {
   --border-radius: 12px;
-  --border-color: #e1e5e9;
-  --color: #667eea;
+  --border-color: 
+#e1e5e9;
+  --color: 
+#74b9ff;
   font-weight: 600;
   margin-bottom: 1rem;
   transition: all 0.3s ease;
@@ -138,19 +151,22 @@
 }
 
 .register-button:hover {
-  --border-color: #667eea;
-  --background: rgba(102, 126, 234, 0.05);
+  --border-color: 
+#74b9ff;
+  --background: rgba(116, 185, 255, 0.05);
 }
 
 .intro-button {
-  --color: #718096;
+  --color: 
+#718096;
   font-size: 0.9rem;
   margin-top: 0.5rem;
   text-transform: none;
 }
 
 .intro-button:hover {
-  --color: #4299e1;
+  --color: 
+#74b9ff;
 }
 
 /* Animations */
@@ -170,11 +186,11 @@
   .card-content {
     padding: 1.5rem;
   }
-  
+
   .welcome-text {
     font-size: 1.75rem;
   }
-  
+
   .login-logo {
     width: 60px;
     height: 60px;
@@ -186,9 +202,234 @@
   .login-card {
     background: rgba(30, 30, 30, 0.95);
   }
-  
+
   .modern-toolbar {
     --background: rgba(30, 30, 30, 0.95);
     --color: #fff;
   }
+}
+
+/* Standard Google Sign-in Button */
+.google-signin-btn {
+  --background: var(--google-background);
+  --background-hover: var(--google-hover);
+  --background-activated: #f1f3f4;
+  --color: var(--google-text);
+  --border-radius: 12px;
+  --border-width: 2px;
+  --border-style: solid;
+  --border-color: var(--google-border);
+  --box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
+  --padding-start: 16px;
+  --padding-end: 16px;
+  --padding-top: 12px;
+  --padding-bottom: 12px;
+  font-weight: 500;
+  font-size: 16px;
+  height: 48px;
+  margin: 8px 0;
+  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
+}
+
+.google-signin-btn:hover {
+  --border-color: var(--arctic-blue-primary);
+  --box-shadow: 0 4px 12px rgba(116, 185, 255, 0.2);
+  transform: translateY(-2px);
+}
+
+.google-signin-btn ion-icon {
+  margin-right: 12px;
+  font-size: 20px;
+}
+
+/* Arctic Blue Filled Google Button */
+.google-signin-btn-filled {
+  --background: linear-gradient(135deg, var(--arctic-blue-primary) 0%, var(--arctic-blue-secondary) 100%);
+  --background-hover: linear-gradient(135deg, #5faef7 0%, #5f4bdb 100%);
+  --background-activated: linear-gradient(135deg, #4a9ef5 0%, #4f3fd9 100%);
+  --color: #ffffff;
+  --border-radius: 12px;
+  --border-width: 0px;
+  --box-shadow: 0 4px 15px rgba(116, 185, 255, 0.4);
+  --padding-start: 16px;
+  --padding-end: 16px;
+  --padding-top: 12px;
+  --padding-bottom: 12px;
+  font-weight: 600;
+  font-size: 16px;
+  height: 48px;
+  margin: 8px 0;
+  transition: all 0.3s ease;
+}
+
+.google-signin-btn-filled:hover {
+  --box-shadow: 0 6px 20px rgba(116, 185, 255, 0.5);
+  transform: translateY(-2px);
+}
+
+.google-signin-btn-filled ion-icon {
+  margin-right: 12px;
+  font-size: 20px;
+  color: #ffffff;
+}
+
+/* Outline Google Button with Arctic Theme */
+.google-signin-btn-outline {
+  --background: transparent;
+  --background-hover: rgba(116, 185, 255, 0.05);
+  --background-activated: rgba(116, 185, 255, 0.1);
+  --color: var(--arctic-blue-primary);
+  --border-radius: 12px;
+  --border-width: 2px;
+  --border-style: solid;
+  --border-color: var(--arctic-blue-primary);
+  --box-shadow: none;
+  --padding-start: 16px;
+  --padding-end: 16px;
+  --padding-top: 12px;
+  --padding-bottom: 12px;
+  font-weight: 600;
+  font-size: 16px;
+  height: 48px;
+  margin: 8px 0;
+  transition: all 0.3s ease;
+}
+
+.google-signin-btn-outline:hover {
+  --background: rgba(116, 185, 255, 0.08);
+  --box-shadow: 0 2px 8px rgba(116, 185, 255, 0.2);
+}
+
+.google-signin-btn-outline ion-icon {
+  margin-right: 12px;
+  font-size: 20px;
+  color: var(--arctic-blue-primary);
+}
+
+/* Dark Mode Support */
+@media (prefers-color-scheme: dark) {
+  .google-signin-btn {
+    --background: #2d3748;
+    --background-hover: #1a202c;
+    --color: #ffffff;
+    --border-color: #4a5568;
+  }
+  
+  .google-signin-btn:hover {
+    --border-color: var(--arctic-blue-light);
+  }
+}
+/* Loading State */
+.google-signin-btn.loading,
+.google-signin-btn-filled.loading,
+.google-signin-btn-outline.loading {
+  --color: rgba(0, 0, 0, 0.7);
+  pointer-events: none;
+}
+
+@media (prefers-color-scheme: dark) {
+  /* Loading State dark mode*/
+  .google-signin-btn.loading,
+  .google-signin-btn-filled.loading,
+  .google-signin-btn-outline.loading {
+  --color: rgba(255, 255, 255, 0.7);
+    pointer-events: none;
+  }
+}
+
+
+.google-signin-btn.loading ion-icon,
+.google-signin-btn-filled.loading ion-icon,
+.google-signin-btn-outline.loading ion-icon {
+  display: none;
+}
+
+/* Custom Google Icon Styles */
+.google-icon {
+  width: 20px;
+  height: 20px;
+  margin-right: 12px;
+}
+
+.google-icon svg {
+  width: 100%;
+  height: 100%;
+}
+
+/* Responsive Design */
+@media (max-width: 768px) {
+  .google-signin-btn,
+  .google-signin-btn-filled,
+  .google-signin-btn-outline {
+    font-size: 14px;
+    height: 44px;
+    --padding-start: 12px;
+    --padding-end: 12px;
+  }
+}
+
+/* Animation Classes */
+@keyframes slideInUp {
+  from {
+    opacity: 0;
+    transform: translateY(30px);
+  }
+  to {
+    opacity: 1;
+    transform: translateY(0);
+  }
+}
+
+.slide-in-up {
+  animation: slideInUp 0.6s ease-out;
+}
+
+/* Focus States for Accessibility */
+.google-signin-btn:focus-visible,
+.google-signin-btn-filled:focus-visible,
+.google-signin-btn-outline:focus-visible {
+  --box-shadow: 0 0 0 3px rgba(116, 185, 255, 0.3);
+  outline: none;
+}
+
+/* Button Content Alignment */
+.google-signin-btn .button-inner,
+.google-signin-btn-filled .button-inner,
+.google-signin-btn-outline .button-inner {
+  display: flex;
+  align-items: center;
+  justify-content: center;
+}
+
+/* Ripple Effect Override */
+.google-signin-btn ion-ripple-effect,
+.google-signin-btn-filled ion-ripple-effect,
+.google-signin-btn-outline ion-ripple-effect {
+  color: var(--arctic-blue-primary);
+}
+
+/* Size Variants */
+.google-signin-btn.button-small,
+.google-signin-btn-filled.button-small,
+.google-signin-btn-outline.button-small {
+  height: 36px;
+  font-size: 14px;
+  --padding-start: 12px;
+  --padding-end: 12px;
+}
+
+.google-signin-btn.button-large,
+.google-signin-btn-filled.button-large,
+.google-signin-btn-outline.button-large {
+  height: 56px;
+  font-size: 18px;
+  --padding-start: 24px;
+  --padding-end: 24px;
+}
+
+/* Full Width Buttons */
+.google-signin-btn.button-full,
+.google-signin-btn-filled.button-full,
+.google-signin-btn-outline.button-full {
+  width: 100%;
 }
\ No newline at end of file
