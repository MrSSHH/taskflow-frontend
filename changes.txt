diff --git a/src/pages/Dashboard.tsx b/src/pages/Dashboard.tsx
index 4706bde..72c3a93 100644
--- a/src/pages/Dashboard.tsx
+++ b/src/pages/Dashboard.tsx
@@ -1,49 +1,15 @@
 import {
-  IonButton,
   IonButtons,
-  IonCard,
-  IonCardContent,
-  IonCardHeader,
-  IonCardSubtitle,
-  IonCardTitle,
   IonContent,
   IonHeader,
-  IonItem,
-  IonList,
   IonMenuButton,
   IonPage,
-  IonProgressBar,
-  IonSearchbar,
-  IonText,
   IonTitle,
   IonToolbar,
-  useIonViewWillEnter,
 } from "@ionic/react";
-import React, { useState } from "react";
+import React from "react";
 
 const Dashboard: React.FC = () => {
-  const [loading, setLoading] = useState<boolean>(true);
-  const [tasks, setTasks] = useState<any[]>([]);
-
-  const getTasks = async () => {
-    try {
-      const res = await fetch("http://192.168.60.22:3000/api/tasks?limit=10");
-      const data = await res.json();
-      console.log("* ~ Dashboard ~ getTasks ~ tasks:", data);
-      return data;
-    } catch (err) {
-      console.error("Error fetching tasks:", err);
-      return [];
-    }
-  };
-
-  useIonViewWillEnter(async () => {
-    setLoading(true);
-    const tasksData = await getTasks();
-    setTasks(tasksData);
-    setLoading(false);
-  });
-
   return (
     <IonPage>
       <IonHeader>
@@ -53,38 +19,9 @@ const Dashboard: React.FC = () => {
           </IonButtons>
           <IonTitle>Dashboard</IonTitle>
         </IonToolbar>
-        <IonToolbar color={"secondary"} >
-          <IonSearchbar className="ion-margin-top" />
-        {loading && <IonProgressBar type="indeterminate" />}
-        </IonToolbar>
       </IonHeader>
-      <IonContent>
-        {loading ? (
-          <IonText>
-            Loading...
-          </IonText>
-        ) : (
-          tasks.map((task, index) => (
-            <IonCard key={task.id}>
-              <IonCardHeader>
-              <IonCardSubtitle>
-                Nearest due date: {task.dueDates[0].dueDates}
-               </IonCardSubtitle>
-   
-                <IonCardTitle>
-                  {task.title}
-                </IonCardTitle>
-              </IonCardHeader>
-              <IonCardContent>
-                {task.body}
-              </IonCardContent>
-              <IonButton fill="clear">Edit</IonButton>
-              <IonButton fill="clear">Delete</IonButton>
-
-            </IonCard>
-          ))
-  
-        )}
+      <IonContent className="ion-padding">
+        Great dashboard design here!
       </IonContent>
     </IonPage>
   );
diff --git a/src/pages/Login.tsx b/src/pages/Login.tsx
index 61b6554..8f356e1 100644
--- a/src/pages/Login.tsx
+++ b/src/pages/Login.tsx
@@ -54,7 +54,7 @@ const Login: React.FC = () => {
     setIntroSeen(true);
   };
 
-  const watchIntroAgain = async (event: any) => {
+  const watchIntroAgain = async () => {
     setIntroSeen(false);
     await Preferences.remove({ key: INTRO_KEY });
   };
@@ -66,7 +66,7 @@ const Login: React.FC = () => {
         <IonPage>
           <IonHeader>
             <IonToolbar color="tertiary">
-              <IonTitle>Benji's App</IonTitle>
+              <IonTitle>Taskflow</IonTitle>
             </IonToolbar>
           </IonHeader>
           <IonContent scrollY={false} className="ion-padding">
diff --git a/src/pages/Tasks.tsx b/src/pages/Tasks.tsx
index e0a0b88..4167f39 100644
--- a/src/pages/Tasks.tsx
+++ b/src/pages/Tasks.tsx
@@ -1,15 +1,51 @@
 import {
+  IonButton,
   IonButtons,
+  IonCard,
+  IonCardContent,
+  IonCardHeader,
+  IonCardSubtitle,
+  IonCardTitle,
   IonContent,
   IonHeader,
+  IonItem,
+  IonList,
   IonMenuButton,
   IonPage,
+  IonProgressBar,
+  IonRefresher,
+  IonRefresherContent,
+  IonSearchbar,
+  IonText,
   IonTitle,
   IonToolbar,
+  RefresherCustomEvent,
+  useIonViewWillEnter,
 } from "@ionic/react";
-import React from "react";
+import React, { useState } from "react";
 
 const Tasks: React.FC = () => {
+  const [loading, setLoading] = useState<boolean>(true);
+  const [tasks, setTasks] = useState<any[]>([]);
+
+  const fetchTasks = async () => {
+    const res = await fetch("http://192.168.50.52:3000/api/tasks?limit=10");
+    const data = await res.json();
+    console.log("* ~ Tasks.tsx ~ getTasks ~ tasks:", data);
+    setTasks(data);
+  };
+
+  useIonViewWillEnter(async () => {
+    setLoading(true);
+    await fetchTasks();
+    setLoading(false);
+  });
+
+  async function handleRefresh(event: RefresherCustomEvent) {
+    await fetchTasks();
+    event.detail.complete();
+  }
+
   return (
     <IonPage>
       <IonHeader>
@@ -19,10 +55,35 @@ const Tasks: React.FC = () => {
           </IonButtons>
           <IonTitle>Tasks</IonTitle>
         </IonToolbar>
+        <IonToolbar color={"secondary"}>
+          <IonSearchbar />
+          {loading && <IonProgressBar type="indeterminate" />}
+        </IonToolbar>
       </IonHeader>
-      <IonContent className="ion-padding">Tasks</IonContent>
+      <IonContent>
+        <IonRefresher slot="fixed" onIonRefresh={handleRefresh}>
+          <IonRefresherContent />
+        </IonRefresher>
+        {loading ? (
+          <IonText>Loading...</IonText>
+        ) : (
+          tasks.map((task) => (
+            <IonCard key={task.id}>
+              <IonCardHeader>
+                <IonCardSubtitle>
+                  Nearest due date: {task.dueDates[0]?.dueDates}
+                </IonCardSubtitle>
+
+                <IonCardTitle>{task.title}</IonCardTitle>
+              </IonCardHeader>
+              <IonCardContent>{task.body}</IonCardContent>
+              <IonButton fill="clear">Edit</IonButton>
+              <IonButton fill="clear">Delete</IonButton>
+            </IonCard>
+          ))
+        )}
+      </IonContent>
     </IonPage>
   );
 };
-
 export default Tasks;
